package twoDCellSpace;

import simView.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import GenCol.*;
import genDevs.plots.*;
import java.util.*;
import java.awt.*;

import java.text.*;
import java.io.*;

public class moverCellSpace
    extends TwoDimCellSpace {
  protected mover center;

  public moverCellSpace() {
    this(40, 40);
    //  this(2,2);
  }

  public moverCellSpace(int xDim, int yDim) {
    super("moverCell Space", xDim, yDim);

    this.numCells = xDim * yDim;

    for (int i = 0; i < xDimCellspace; i++) {
      for (int j = 0; j < yDimCellspace; j++) {
        mover fc = new mover(i, j);

        addCell(fc,  xDimCellspace, yDimCellspace);
        if (i == xDimCellspace / 2 && j == yDimCellspace / 2) {
          center = fc;
          //  if (i ==0 && j == 0)center = fc;
        }
      }
    }

    //
    hideAll(); //hides only components so far

    // Do the couplings

    doNeighborToNeighborCoupling();

    coupleAllTo("outTrans", this, "outTrans");
    coupleOneToAll(this, "stop", "stop");
    coupleOneToAll(this, "start", "start");

    addCoupling(this, "inN", center, "inN");

    Cell NofC = neighborOf(center, 0, 1);
    addCoupling(this, "inN", NofC, "inN");

    CellGridPlot t = new CellGridPlot("moverCellSpace", 0.1,
                                      "", 400, "", 400);

    t.setCellGridViewLocation(600, 300);
    t.setCellSize(10);
    t.setCellGridViewLocation(570, 100);
    add(t);
    coupleAllTo("outDraw", t, "drawCellToScale");

    //
  }

  /**
   * Automatically generated by the SimView program.
   * Do not edit this manually, as such changes will get overwritten.
   */
  public void layoutForSimView() {
    preferredSize = new Dimension(900, 1300);
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 1")).
        setPreferredLocation(new Point(285, 45));
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 0")).
        setPreferredLocation(new Point(291, 237));
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 1")).
        setPreferredLocation(new Point(54, 26));
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 0")).
        setPreferredLocation(new Point(49, 240));
  }
} // End moverCellSpace
