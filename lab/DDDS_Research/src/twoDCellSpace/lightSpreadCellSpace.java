package twoDCellSpace;

import simView.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import genDevs.simulation.heapSim.HeapCoord;
import genDevs.simulation.realTime.*;
import genDevs.simulation.special.*;
import GenCol.*;
import genDevs.plots.*;
import java.util.*;
import java.awt.*;

import java.text.*;
import java.io.*;

public class lightSpreadCellSpace
    extends TwoDimCellSpace {

  public lightSpreadCellSpace() {
    //
    this(40, 40);
    //  this(2,2);
    // this(20,20);
  }

  public lightSpreadCellSpace(int xDim, int yDim) {
    super("LightSpread Cell Space", xDim, yDim);

    this.numCells = xDim * yDim;

    for (int i = 0; i < xDimCellspace; i++) {
      for (int j = 0; j < yDimCellspace; j++) {
        lightSpreadCell fc = new lightSpreadCell(i, j);
        //
        //fc.visible = false;

        fc.barrierRect(25, 20, 4, 5);
        fc.barrierCircle(30, 23, 4);

        fc.barrierCircle(10, 10, 4);
        fc.barrierRect(5, 5, 4, 5);

        double rotAngle = Math.PI / 8;

        fc.barrierRectRotate(rotAngle, 4, 25, 2, 10);
        fc.barrierRectRotate(rotAngle, 8, 25, 2, 10);
        fc.barrierRectRotate(rotAngle, 2, 34, 10, 2);

        addCell(fc, xDimCellspace, yDimCellspace);
      }
    }

    lightSpreadCell c = (lightSpreadCell) withId(10, 15);

    //
    c.source = true;
    //
    c.period = 2;

    //  lightSpreadCell d = (lightSpreadCell)withId(xDimCellspace/2,yDimCellspace/2);
   // d.source = true;
   //  d.period = 2;

    //
    hideAll(); //hides only components so far

    // Do the couplings

    doNeighborToNeighborCoupling();

    coupleOneToAll(this, "stop", "stop");
    coupleOneToAll(this, "start", "start");

    CellGridPlot t = new CellGridPlot("lightSpreadCellSpace", 0.1,
                                      "", 400, "", 400);

    t.setCellSize(10);
    t.setCellGridViewLocation(570, 100);
    add(t);
    // t.setHidden(false);
    coupleAllTo("outDraw", t, "drawCellToScale");

    mover m1 = new mover( -10 + xDimCellspace, -10 + yDimCellspace);
    //
    add(m1);
    //
    m1.setHidden(true);
    m1.setTwoDimSpaceSize( xDimCellspace, yDimCellspace);
    m1.setPos();

    coupleAllTo("outCoord", m1, "in");

    addCoupling(m1, "outDraw", t, "drawCellToScale");
/*
    mover m2 = new mover(20, 39);
    //
    add(m2);
    //
    m2.setHidden(true);
    m2.setTwoDimSpaceSize(xDimCellspace, yDimCellspace);
    m2.setPos();

    coupleAllTo("outCoord", m2, "in");

    addCoupling(m2, "outDraw", t, "drawCellToScale");
*/
  }

  public static void main(String args[]){
  //CoordinatorInterface r;


  //coordinator r = new coordinator(new lightSpreadCellSpace());
  HeapCoord r = new HeapCoord(new lightSpreadCellSpace());
  //TunableCoordinator r = new TunableCoordinator(new lightSpreadCellSpace());
  //r.setTimeScale(5);
  r.initialize();

  r.simulate(5000);
//  System.exit(0);
  }

  /**
   * Automatically generated by the SimView program.
   * Do not edit this manually, as such changes will get overwritten.
   */
  public void layoutForSimView() {
    preferredSize = new Dimension(900, 495);
    ( (ViewableComponent) withName("mover Cell_key = 20 ,value = 39")).
        setPreferredLocation(new Point(535, 59));
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 0")).
        setPreferredLocation(new Point( -2, 62));
    ( (ViewableComponent) withName("mover Cell_key = 1 ,value = 1")).
        setPreferredLocation(new Point(548, 280));
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 1")).
        setPreferredLocation(new Point(251, 60));
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 1")).
        setPreferredLocation(new Point(260, 293));
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 0")).
        setPreferredLocation(new Point( -2, 288));
  }
}
// End lightSpreadCellSpace
