
package pulseModels;

import simView.*;
import java.awt.*;
import java.lang.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import GenCol.*;
import pulseExpFrames.*;

import java.util.*;


class departureProcess extends varGen{
protected double length;

public double rateFn(){//override
//return rate;
if (length > 0)
return rate*length/10;
else return 0;
}


public void initialize(){
super.initialize();
rate = initRate;
length = 0;
holdIn("active ",Math.abs(signedTimeAdvance()));
}

public departureProcess(String nm,double rate,double scale){
super(nm,1.,scale);
initRate = rate;
length = 0;
direction = nextDirection();
addInport("setRate");
addInport("setLevel");
addOutport("out");
}

public void deltext(double e,message x){
for (int i=0; i< x.getLength();i++)
  if (messageOnPort(x,"setLevel",i)){
  doubleEnt dv = (doubleEnt)x.getValOnPort("setLevel",i);
  length = dv.getv();
  }
  super.deltext(e,x);
}

public String getTooltipText(){
   return
   //super.stringState()
  super.getTooltipText()
    +  "\n"+" length: "+ length;
  }
}


public class queueDEVS extends  ViewableDigraph{

public queueDEVS (){
super("queueDEVS ");

addInport("in");
addOutport("out");

double scale = .1;//.01;//.05;//

ViewableAtomic arrivalProcess = new varGen("arrivalProcess",.6,scale);//rate

ViewableAtomic departureProcess  = new  departureProcess("departureProcess",-.3,scale);

ViewableAtomic length = new sum("length",0);//state,quantum,scale


add(arrivalProcess);
add(departureProcess);
add(length);



addCoupling(arrivalProcess,"out",length,"addLevel");
addCoupling(departureProcess,"out",length,"addLevel");
addCoupling(length,"state",departureProcess,"setLevel");


    preferredSize = new Dimension(500, 500);
    arrivalProcess.setPreferredLocation(new Point(16, 10));
    departureProcess.setPreferredLocation(new Point(16, 100));
    length.setPreferredLocation(new Point(300, 10));

}

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(631, 317);
        ((ViewableComponent)withName("arrivalProcess")).setPreferredLocation(new Point(47, 45));
        ((ViewableComponent)withName("length")).setPreferredLocation(new Point(308, 97));
        ((ViewableComponent)withName("departureProcess")).setPreferredLocation(new Point(13, 170));
    }
}

