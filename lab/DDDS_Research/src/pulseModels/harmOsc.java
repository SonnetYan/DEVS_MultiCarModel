
package pulseModels;

import simView.*;
import genDevs.plots.*;
import java.awt.*;
import java.lang.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import genDevs.simulation.realTime.*;
import GenCol.*;
import pulseExpFrames.*;

import java.util.*;

public class harmOsc extends  ViewableDigraph{


public static void main (String[ ] args){
TunableCoordinator c = new TunableCoordinator(new harmOsc());
c.setTimeScale(.01);
c.initialize();
c.simulate(100000);
}

public harmOsc (){
super("harmOsc ");

addInport("in");
addOutport("out");


double omega = 2*Math.PI; //period = 1

double initx = 10;
double quantum =  .01;//3;//.01;//.1;
double lossPercent = .0005;//can use same value for all initx if quantum is 1% of initx


//
ViewableAtomic rx = new linearGen("rx",-omega,quantum);//rate
//
ViewableAtomic ry  = new  linearGen("ry",omega,quantum);//default is -springConst

//ViewableAtomic rx = new nonLinearGen("rx",-omega,quantum);//rate
//ViewableAtomic ry  = new  nonLinearGen("ry",omega,quantum);//default is -springConst

ViewableAtomic x = new sum("x",initx,lossPercent);//state,,lossPercent
ViewableAtomic y = new sum("y",0,lossPercent);//state,lossPercent

add(rx);
add(ry);
add(x);
add(y);


addCoupling(rx,"out",x,"in");
addCoupling(ry,"out",y,"in");
addCoupling(y,"out",rx,"setInput");
addCoupling(x,"out",ry,"setInput");

ViewableAtomic dist = new sum("dist",0);//counts the events
add(dist);


addCoupling(rx,"outPos",dist,"in");
addCoupling(ry,"outPos",dist,"in");

CellGridPlot t = new CellGridPlot("XY PhasePlot",1,
                                       3*initx,3*initx);

add(t);
t.setCellGridViewLocation(500,100);

addCoupling(x,"out",t,"drawI");
addCoupling(y,"out",t,"drawJ");

CellGridPlot timeP = new CellGridPlot("X Time Plot",10,3*initx);
timeP.setCellGridViewLocation(100,300);
timeP.setSpaceSize(100,40);
timeP.setCellSize(5);
timeP.setTimeScale(5);
add(timeP);
addCoupling(x,"out",timeP,"timePlot");


CellGridPlot sigmaP = new CellGridPlot("X Sigma Plot",10,.01);
sigmaP.setCellGridViewLocation(100,500);
sigmaP.setSpaceSize(100,40);
sigmaP.setCellSize(5);
sigmaP.setTimeScale(1);
add(sigmaP);

addCoupling(rx,"outSigma",sigmaP,"timePlot");

}


    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(592, 419);
        ((ViewableComponent)withName("ry")).setPreferredLocation(new Point(13, 90));
        ((ViewableComponent)withName("dist")).setPreferredLocation(new Point(146, 182));
        ((ViewableComponent)withName("x")).setPreferredLocation(new Point(273, 21));
        ((ViewableComponent)withName("rx")).setPreferredLocation(new Point(8, 10));
        ((ViewableComponent)withName("y")).setPreferredLocation(new Point(274, 95));
    }
}

