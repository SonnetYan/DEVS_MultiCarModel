
package pulseModels;

import simView.*;
import genDevs.plots.*;
import java.awt.*;
import java.lang.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import GenCol.*;
import pulseExpFrames.*;

import java.util.*;


class derivGen extends varGen{
protected double x,max;



public derivGen(String nm,double max,double scale){
super(nm,1/max,scale);
//x = 0.0001;
this.max = max;
direction = nextDirection();
addInport("setRate");
addOutport("out");
}



public void initialize(){
super.initialize();
rate = initRate;
//x = 0.0001;
passivate();
}



public void deltext(double e,message x){
Continue(e);

 for (int i=0; i< x.getLength();i++)
   if (messageOnPort(x,"setRate",i)){
    doubleEnt dv = (doubleEnt)x.getValOnPort("setRate",i);
    double val = dv.getv();
    if (val > 9990)rate = 0;
    else
    rate = val*val*(max-val)/(max*max); //scaling back to original is x/max
   }
  double newTa = Math.abs(signedTimeAdvance());
  if (newTa < sigma)
  holdIn("active",newTa);
  else
  holdIn("active",sigma);//only to show level
}
}


public class interestStiff extends  ViewableDigraph{


    public static void main (String[] args) {
    /*
        digraph d = new interestStiff();
        TunableCoordinator c = new TunableCoordinator(d);
        c.setTimeScale(.000001);
        c.initialize();
        c.simulate(100000);
        */
    }

public interestStiff(){
super("interestStiff");

addInport("in");
addOutport("out");

double initx = 5, max = 1/.0001;
double scale = 5;
double quantum = scale; //can't be less



ViewableAtomic x = new sum("x",initx);//state,quantum
ViewableAtomic derivGen = new derivGen("derivGen",max,scale);



add(x);
add(derivGen);



addCoupling(x,"state",derivGen,"setRate");
addCoupling(derivGen,"out",x,"addLevel");



CellGridPlot timeP = new CellGridPlot(name +" Time Plot",10,3*max);
timeP.setCellGridViewLocation(100,500);
timeP.setSpaceSize(100,40);
timeP.setCellSize(5);
timeP.setTimeScale(100);
add(timeP);
addCoupling(x,"state",timeP,"timePlot");
}


    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(584, 324);
        ((ViewableComponent)withName("x")).setPreferredLocation(new Point(244, 31));
        ((ViewableComponent)withName("derivGen")).setPreferredLocation(new Point(-26, 47));
        ((ViewableComponent)withName("interestStiff Time Plot")).setPreferredLocation(new Point(52, 193));
    }
}
