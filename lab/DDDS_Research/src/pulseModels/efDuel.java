
package pulseModels;

import simView.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import GenCol.*;

import java.util.*;
import java.awt.*;




class referee extends ViewableAtomic {
    String healthStateOfA;
    String healthStateOfB;
public referee (){
    super("referee");

addOutport("orderToShoot");
addInport("inDeadA");
addInport("inDeadB");
}

  public void initialize(){
    super.initialize();
    healthStateOfA  = "alive";
    healthStateOfB = "alive";
    holdIn("start",0);
  }

 public void deltext(double e,message x){
    Continue(e);
   if (somethingOnPort(x,"inDeadA"))
      healthStateOfA = "dead";
   if (somethingOnPort(x,"inDeadB"))
      healthStateOfB = "dead";
}

  public void   deltint(){
       passivate();
  }

  public message out(){
    if (phaseIs("start"))
      return  outputNameOnPort("shoot","orderToShoot");
   else return new message();
  }
    public String getTooltipText(){
  return
    super.getTooltipText()
     + "\n"+"healthStateOfA: "+healthStateOfA
     + "\n"+"healthStateOfB: "+healthStateOfB;
     }

}


public class efDuel extends ViewableDigraph {

public efDuel (){
    super("efDuel");
    ViewableDigraph  duel  = new duel();
    ViewableAtomic  expf = new referee();

    add(expf);
    add(duel);
//duel.setBlackBox(true);
     addCoupling(expf,"orderToShoot",duel,"orderToShoot");
     addCoupling(duel,"outDeadA",expf,"inDeadA");
     addCoupling(duel,"outDeadB",expf,"inDeadB");

 }
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(840, 631);
        ((ViewableComponent)withName("duel")).setPreferredLocation(new Point(61, 142));
        ((ViewableComponent)withName("referee")).setPreferredLocation(new Point(244, 58));
    }
 }
