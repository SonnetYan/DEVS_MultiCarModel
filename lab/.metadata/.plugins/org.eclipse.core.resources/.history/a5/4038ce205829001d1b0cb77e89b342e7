package Chapter6_Tutorial_CrossingTimeParameter;


import java.util.Random;

import GenCol.*;
import genDevs.modeling.*;
import genDevs.simulation.*;
import genDevs.simulation.realTime.*;


public class test{

protected static digraph testDig;

  public test(){}

  public static void main(String[ ] args)
  {
	  int groupNumber = 1000;
	  Random rd = new Random(666);
	  for(int i = 0 ;i<groupNumber;i++) {
		  
		  Long curTime = System.currentTimeMillis();
		  GlobalRef ref= GlobalRe

//		model_configData.curTime = System.currentTimeMillis();
//		model_configData.curRd = Math.abs(new Random(model_configData.curTime).nextInt());
//		model_configData.randSeed_eastMoving = model_configData.curRd;
//		model_configData.randSeed_westMoving = Math.abs(new Random(model_configData.curRd/2+6352).nextInt());
//		model_configData.randSeed_IntersectionM = Math.abs(new Random(model_configData.randSeed_westMoving).nextInt());
			
		  testDig = new trafficControlSys_Real();
		  genDevs.simulation.coordinator cs = new genDevs.simulation.coordinator(testDig);

//      TunableCoordinator cs = new TunableCoordinator(testDig);
//      cs.setTimeScale(0.1);

		  cs.initialize();
      //cs.simulate(5000);
      // Add extra 2000s  to ensure the Car-waiting time can be computed so that the prediction results can be compared
		  cs.simulate_TN(PF_configData.numberofsteps*PF_configData.stepInterval);//+2000); 
		  System.out.println("simulation finsihed");
		  
		  
		  PF_configData.curGroup++;
		  cs.removeModel(testDig);
		System.gc();
	  }
  }
}
